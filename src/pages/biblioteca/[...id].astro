---
export const prerender = true;

import type { CollectionEntry } from "astro:content";

import { getCollection, render } from "astro:content";

import MainLayout from "@layouts/MainLayout.astro";
import LibrarySEO from "@SEO/contents/BooksSEO.astro";

import ScrollGoBackBtn from "@shared/components/bottons/ScrollGoBackBtn";
import GoBackInTop from "@shared/components/bottons/GoBackInTop.astro";
import TOC from "@shared/components/ToC/toc";

import BookScore from "@/components/pages/books/BookScore.astro";
import BookCover from "@/components/pages/books/BookCover.astro";
import GoOut from "@icons/shared/GoOut.astro";

interface Props {
  entry: CollectionEntry<"library">;
}

export async function getStaticPaths() {
  const library = await getCollection("library");

  return library.map((entry) => ({
    params: { id: entry.id },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { data, id } = entry;

const { title, score, authors, readingTime, publishDate } = data;
const authorsInArry = Array.isArray(authors) ? authors : [authors];

const { Content, headings } = await render(entry);
---

<MainLayout>
  <LibrarySEO slot="head" entry={entry} />
  <article class="mx-auto">
    <TOC client:only="react" headings={headings} title={title} />
    <GoBackInTop headPage="/biblioteca" />
    <ScrollGoBackBtn headPage="/biblioteca" client:only="react" />

    <section class="grid grid-cols-2 max-w-lg mx-auto">
      <BookCover entry={entry} />

      <section class="flex flex-col items-start custom-prose">
        <h1 transition:name={`${id}-${title}`} class="text-start mb-2">
          {title}
        </h1>
        <div class="flex flex-col -mt-1 mb-4">
          <!-- TODO: HACER EL AUTHORS EN UN COMPONENTE A PARTE Y QUE DEPENDIENDO DE SI ES UNO o DOS, QUE SE MUESTRE UNA COSA U OTRA -->
          {
            authorsInArry.map((author) => (
              <a
                class="no-underline text-sm hover:underline text-cz-text-headers-dark"
                target="_blank"
                rel="noopener"
                href={author.link}
              >
                de {author.name}
              </a>
            ))
          }
        </div>
        <BookScore
          entry={entry}
          width="w-5 xs:w-7"
          height="w-5 xs:h-7"
          transition:name={`${id}-bookScore-${score}`}
        />
        <div class="flex flex-col mt-4 gap-y-2 text-xs text-cz-text-relax-dark">
          <span
            >Lo publiqu√© el {publishDate} y puedes leerlo en {readingTime} min</span
          >
        </div>
      </section>
    </section>
    <!-- <div class="mt-4 mx-auto">
      <TableOfContents headings={headings} client:only="react" />
    </div> -->
    <section id="mdx-content" class="custom-prose mx-auto mdx">
      <Content />
    </section>
    <section class="custom-prose">
      <h2 class="mb-2">Autor(es)</h2>
      {
        authorsInArry.map((author) => (
          <div class="flex items-center gap-x-1 mb-2">
            <a
              class="no-underline text-sm text-cz-neon-blue flex items-center gap-x-1 mb-2"
              href={author.link}
              target="_blank"
              rel="noopener"
            >
              {author.name}
              <GoOut classes="w-4 h-4" />
            </a>
          </div>
        ))
      }
    </section>
  </article>
</MainLayout>
